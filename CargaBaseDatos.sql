USE CmiSellOutEcuador;

DECLARE @dia DATE;
DECLARE @d1 AS VARCHAR(20);

SELECT @dia= DATEADD(DAY,-6,SYSDATETIME());
-- poner el último día de ventas
SELECT @d1= TRY_CONVERT(VARCHAR(20), TRY_CONVERT(DATE, @dia,103),103);

PRINT @dia;
PRINT 'd1 '+ @d1;
--SELECT TRY_CONVERT(VARCHAR,DATEADD(MONTH,-1,@dia),103)

DECLARE @f AS DATE;
DECLARE @d2 AS VARCHAR(20);
DECLARE @d3 AS VARCHAR(20); 

--SELECT DATEADD(MONTH,-1,GETDATE()-64)

SELECT @f= CASE WHEN TRY_CONVERT(VARCHAR(20), TRY_CONVERT(DATE, @dia,103),103)= TRY_CONVERT(VARCHAR(10),TRY_CONVERT(DATE,EOMONTH(@dia),103),103)
THEN TRY_CONVERT(DATE,EOMONTH(DATEADD(MONTH,-1,(@dia))),103) ELSE TRY_CONVERT(DATE, DATEADD(MONTH,-1,TRY_CONVERT(DATE, @d1, 103)),103) END;
SELECT @d2 = TRY_CONVERT(VARCHAR(10), @f, 103);
SELECT @d3 = TRY_CONVERT(VARCHAR(10), TRY_CONVERT(DATE,DATEADD(YEAR,-1,@dia),103),103); 

PRINT 'd2  '+ @d2;
PRINT 'd3  '+@d3;

DECLARE @M1 AS VARCHAR(20); 
DECLARE @M2 AS VARCHAR(20);
DECLARE @M3 AS VARCHAR(20);
--DATEADD CUANDO RETROCEDES POR MES, TE DEVUELVE EL DIA EXACTA DEL MES ANTERIOR SEA CUAL FUERE, A EXCEPCION SI ES FIN DE MES Y EL MES ANTERIOR
--TIENE MENOS DIAS, TE DEVUELVE EL ULTIMO DIA DEL MES ANTERIOR


SELECT @M1= PER FROM BD_FECHAS WHERE TRY_CONVERT(VARCHAR(10),TRY_CONVERT(DATE,DIA,103),103) = @d1;
SELECT @M2= PER FROM BD_FECHAS WHERE TRY_CONVERT(VARCHAR(10),TRY_CONVERT(DATE,DIA,103),103)  = @d2;
SELECT @M3= PER FROM BD_FECHAS WHERE TRY_CONVERT(VARCHAR(10),TRY_CONVERT(DATE,DIA,103),103)  = @d3;
 
PRINT @M1;
PRINT @M2;
PRINT @M3;
 
 --Para Pydaco
DECLARE @MA AS DATE;
DECLARE @MA_1 AS DATE;
DECLARE @MA_2 AS DATE;
DECLARE @MA_3 AS DATE;

SELECT @MA = DATEADD(MONTH,-1,@dia);
SELECT @MA_1 = DATEADD(MONTH,-2,@dia);
SELECT @MA_2 = DATEADD(MONTH,-3,@dia);
SELECT @MA_3 = DATEADD(MONTH,-4,@dia);

PRINT @MA;
PRINT @MA_1;
PRINT @MA_2;
PRINT @MA_3;

IF OBJECT_ID(N'tempdb..#CONSOLIDADO0') IS NOT NULL drop table #CONSOLIDADO0

SELECT *
--SELECT DAY(Fecha) Dia, SUM(Importe) SUBTOTAL_NETO
INTO #CONSOLIDADO0
FROM PYDACO_HISTORICO
WHERE TRY_CONVERT(VARCHAR,YEAR(Fecha))+TRY_CONVERT(VARCHAR,MONTH(Fecha))
	IN (TRY_CONVERT(VARCHAR,YEAR(@MA))+TRY_CONVERT(VARCHAR,MONTH(@MA)),
		TRY_CONVERT(VARCHAR,YEAR(@MA_1))+TRY_CONVERT(VARCHAR,MONTH(@MA_1)),
		TRY_CONVERT(VARCHAR,YEAR(@MA_2))+TRY_CONVERT(VARCHAR,MONTH(@MA_2)),
		TRY_CONVERT(VARCHAR,YEAR(@MA_3))+TRY_CONVERT(VARCHAR,MONTH(@MA_3)))
--SELECT * FROM #CONSOLIDADO0

UPDATE A SET Agencia = TRIM(Agencia) FROM #CONSOLIDADO0 A;
UPDATE A SET ClienteSellOut = TRIM(ClienteSellOut) FROM #CONSOLIDADO0 A;
UPDATE A SET Vendedor_Distribuidora = TRIM(Vendedor_Distribuidora) FROM #CONSOLIDADO0 A;
UPDATE A SET CodPydaco = TRIM(CodPydaco) FROM #CONSOLIDADO0 A;
UPDATE A SET CodClienteSellOut = TRIM(CodClienteSellOut) FROM #CONSOLIDADO0 A;
		
--GROUP BY DAY(Fecha)
--SELECT TRY_CONVERT(VARCHAR,YEAR(@MA))+TRY_CONVERT(VARCHAR,MONTH(@MA))

IF OBJECT_ID(N'tempdb..#CONSOLIDADO0_1') IS NOT NULL DROP TABLE #CONSOLIDADO0_1; 

SELECT A.Fecha Fecha, A.Agencia Agencia, A.CodClienteSellOut, A.ClienteSellOut,  A.Vendedor_Distribuidora, 'H-SIN ASIGNAR' Tipo_tienda_Distribuidora,
	   MP.CodAlicorp, M.CodFamilia, M.Familia,
	   A.TUnidades, 0  Plan_Ton, 0 Plan_Dol, A.Importe/1000 real_Dolares, A.TUnidades*M.PesoTon real_ton,
	   'Consumo Masivo' Negocio
INTO #CONSOLIDADO0_1
FROM #CONSOLIDADO0 A
	LEFT JOIN TABLA_MATERIALES_PYDACO MP ON A.CodPydaco = MP.CodPydaco
	LEFT JOIN MAESTRO_ALICORP M ON MP.CodAlicorp = M.CodAlicorp;
--SELECT sum(Real_dolares) FROM #CONSOLIDADO0_1


IF OBJECT_ID(N'tempdb..#CONSOLIDADO0_2') IS NOT NULL DROP TABLE #CONSOLIDADO0_2; 

SELECT A.Fecha, A.Agencia, A.CodFamilia, A.Familia,
	   SUM(A.Plan_Ton) Plan_Ton, SUM(A.Plan_Dol) Plan_Dol , SUM(A.real_Dolares) real_Dolares, SUM(A.real_ton) real_ton
INTO #CONSOLIDADO0_2
FROM #CONSOLIDADO0_1 A
GROUP BY A.Fecha, A.Agencia, A.CodFamilia, A.Familia

--SELECT *from  #CONSOLIDADO0_2 WHERE CodFamilia ='1003012099' AND DATEPART(DAY,Fecha)=01   0.02004   0.0209   1.19466  1.32778  1003012099
----------------------------------------------------
--Corte para agrupar los 3 meses que mecesito anteriores al  MES ACTUAL

IF OBJECT_ID(N'tempdb..#CONSOLIDADO1') IS NOT NULL DROP TABLE #CONSOLIDADO1; 

SELECT DAY(A.Fecha) Dia, A.CodFamilia, A.Familia,
	   SUM(A.Plan_Ton) Plan_Ton, SUM(A.Plan_Dol) Plan_Dol , SUM(A.real_Dolares) real_Dolares, SUM(A.real_ton) real_ton
INTO #CONSOLIDADO1
FROM #CONSOLIDADO0_2 A
WHERE  TRY_CONVERT(VARCHAR,YEAR(Fecha))+TRY_CONVERT(VARCHAR,MONTH(Fecha))
	   IN (TRY_CONVERT(VARCHAR,YEAR(@MA))+TRY_CONVERT(VARCHAR,MONTH(@MA)),
		   TRY_CONVERT(VARCHAR,YEAR(@MA_1))+TRY_CONVERT(VARCHAR,MONTH(@MA_1)),
		   TRY_CONVERT(VARCHAR,YEAR(@MA_2))+TRY_CONVERT(VARCHAR,MONTH(@MA_2)))
GROUP BY DAY(A.Fecha), A.CodFamilia, A.Familia;
--SELECT sum(real_ton) FROM #CONSOLIDADO0_1
--SELECT SUM(real_ton) FROM #CONSOLIDADO0_2  
--SELECT SUM(real_ton) FROM #CONSOLIDADO1
--SELECT * FROM #CONSOLIDADO1 ORDER BY 1 ASC , 2 ASC WHERE CodFamilia is null  5016096878  1003012081
-- VERIFICAR SI EXISTIERA ALGUN DIA EN QUE ESA FAMILIA NO TUVIERA DATOS 

--SELECT sum(real_Dolares) FROM #CONSOLIDADO1 
----where CodFamilia = '1003012081'
--SELECT SUM(Subtotal) FROM #CONSOLIDADO2
----where CodFamilia = '1003012081'

IF OBJECT_ID(N'tempdb..#CONSOLIDADO2') IS NOT NULL  DROP TABLE #CONSOLIDADO2;

SELECT A.DIA, A.CodFamilia, A.Familia, A.real_Dolares Subtotal, A.real_ton Subtotal_Ton
INTO #CONSOLIDADO2 
--SELECT * from #CONSOLIDADO2 order by 1 asc, 3 asc , 2 asc 
--SELECT *
FROM #CONSOLIDADO1 A

--ORDER BY 1 ASC,8 ASC
--GROUP BY A.DIA, A.CodFamilia, A.Familia 

IF OBJECT_ID(N'tempdb..#CONSOLIDADO3') IS NOT NULL  DROP TABLE #CONSOLIDADO3;

SELECT A.DIA, A.CodFamilia, B.CodFamilia CodFamilia2, B.Familia, SUM(B.real_Dolares) Tot_Acum, SUM(B.real_ton) Tot_Acum_Ton
INTO #CONSOLIDADO3 
--SELECT *
FROM #CONSOLIDADO1 A
	LEFT JOIN #CONSOLIDADO1 B
ON A.DIA>=B.DIA  
--where A.codfamilia = '1003012081' AND B.codfamilia = '1003012081' AND A.Agencia = 'ESMERALDAS' ORDER BY 1 ASC,3 ASC ,9 ASC,11 ASC
--ORDER BY 1 ASC,3 ASC ,9 ASC,11 ASC  SELECT (0.00272 + 0.00069 +0.00278 + 0.00197)
GROUP BY A.DIA, A.CodFamilia, B.CodFamilia, B.Familia
--SELECT * from #CONSOLIDADO2 where codfamilia = '1003012081'AND Agencia = 'ESMERALDAS' order by 1 asc, 3 asc , 2 asc 
--SELECT * FROM #CONSOLIDADO3 where codfamilia = '1003012081'  and codfamilia2 = '1003012081' AND Agencia = 'ESMERALDAS' ORDER BY 1 ASC,3 ASC, 2 ASC 36.23656  249.32736
--ORDER BY 1 ASC,2 ASC
--SELECT * FROM #CONSOLIDADO2  where codfamilia = '5016105811' ORDER BY 1 ASC,2 ASC   396.26518
-- 1 Dia Rellenas  1.32778
--2 Dia Rellenas  14.12782 SELECT (1.32778 + 14.12782) 15.4556
-- 3 Dia Rellenas 30.25043 SELECT (1.32778 + 14.12782+ 30.25043) 45.70603
--SELECT 0.10289 +0.73249+0.75286 PLUSBRLLE 1
--SELECT 0.00293+0.29795+0.10317 PLUSBRLLE 1

IF OBJECT_ID(N'tempdb..#CONSOLIDADO4') IS NOT NULL  DROP TABLE #CONSOLIDADO4;

SELECT A.DIA, A.CodFamilia, A.Subtotal, A.Subtotal_Ton, B.Tot_Acum, B.Tot_Acum_Ton
INTO #CONSOLIDADO4
select *
FROM #CONSOLIDADO2 A
	LEFT JOIN #CONSOLIDADO3 B ON A.DIA= B.DIA AND  A.CodFamilia = B.CodFamilia AND A.CodFamilia = B.CodFamilia2

--SELECT * FROM #CONSOLIDADO4 WHERE CodFamilia ='1003012081' AND Agencia = 'ESMERALDAS'
IF OBJECT_ID(N'tempdb..#PORCIONES') IS NOT NULL DROP TABLE #PORCIONES; 

SELECT A.DIA, A.CodFamilia, A.Subtotal, A.Subtotal_Ton, B.Dia DIA2, B.CodFamilia CodFamilia2, B.Tot_Acum, B.Tot_Acum_Ton, A.Subtotal/B.Tot_Acum Porcion, A.Subtotal_Ton/B.Tot_Acum_Ton Porcion_Ton
INTO #PORCIONES
FROM #CONSOLIDADO2 A
LEFT JOIN #CONSOLIDADO4 B
ON A.DIA<=B.DIA 
--ORDER BY 1 ASC
WHERE B.DIA= DAY(@dia)-- asignar el dia de corte(con esto se tendra la proy por dia)  167576.81
AND A.CodFamilia = B.CodFamilia
ORDER BY 1 ASC, 2 ASC
--SELECT distinct codfamilia FROM #PORCIONES
--SELECT * FROM #PORCIONES_M1
SELECT distinct codfamilia FROM #CONSOLIDADO2
--WHERE CodFamilia = '1003012081'
----IF OBJECT_ID(N'tempdb..#CONSOLIDADO1') IS NOT NULL drop table #CONSOLIDADO1  5016105811


--SELECT DAY(Fecha) Fecha, sum(Importe) SUBTOTAL_NETO
--INTO #CONSOLIDADO1
--FROM PYDACO_HISTORICO
--WHERE TRY_CONVERT(VARCHAR,YEAR(Fecha))+TRY_CONVERT(VARCHAR,MONTH(Fecha))
--	IN (TRY_CONVERT(VARCHAR,YEAR(@MA))+TRY_CONVERT(VARCHAR,MONTH(@MA)),
--		TRY_CONVERT(VARCHAR,YEAR(@MA_1))+TRY_CONVERT(VARCHAR,MONTH(@MA_1)),
--		TRY_CONVERT(VARCHAR,YEAR(@MA_2))+TRY_CONVERT(VARCHAR,MONTH(@MA_2)),
--		TRY_CONVERT(VARCHAR,YEAR(@MA_3))+TRY_CONVERT(VARCHAR,MONTH(@MA_3)))
--GROUP BY DAY(Fecha);

--SELECT * FROM #CONSOLIDADO1 
----------------------------------------------------
--Corte para agrupar los 3 meses que mecesito apartir  del MES-1

IF OBJECT_ID(N'tempdb..#CONSOLIDADO1_M1') IS NOT NULL DROP TABLE #CONSOLIDADO1_M1; 

SELECT DAY(A.Fecha) Dia, A.CodFamilia, A.Familia,
	   SUM(A.Plan_Ton) Plan_Ton, SUM(A.Plan_Dol) Plan_Dol , SUM(A.real_Dolares) real_Dolares, SUM(A.real_ton) real_ton
INTO #CONSOLIDADO1_M1
FROM #CONSOLIDADO0_2 A
WHERE  TRY_CONVERT(VARCHAR,YEAR(Fecha))+TRY_CONVERT(VARCHAR,MONTH(Fecha))
	   IN (TRY_CONVERT(VARCHAR,YEAR(@MA_1))+TRY_CONVERT(VARCHAR,MONTH(@MA_1)),
		  TRY_CONVERT(VARCHAR,YEAR(@MA_2))+TRY_CONVERT(VARCHAR,MONTH(@MA_2)),
		  TRY_CONVERT(VARCHAR,YEAR(@MA_3))+TRY_CONVERT(VARCHAR,MONTH(@MA_3)))
GROUP BY DAY(A.Fecha), A.CodFamilia, A.Familia;
--SELECT sum(real_ton) FROM #CONSOLIDADO0_1
--SELECT SUM(real_ton) FROM #CONSOLIDADO0_2  
--SELECT SUM(real_ton) FROM #CONSOLIDADO1
--SELECT * FROM #CONSOLIDADO1 ORDER BY 1 ASC , 2 ASC WHERE CodFamilia is null  5016096878  1003012081
-- VERIFICAR SI EXISTIERA ALGUN DIA EN QUE ESA FAMILIA NO TUVIERA DATOS 

--SELECT sum(real_Dolares) FROM #CONSOLIDADO1 
----where CodFamilia = '1003012081'
--SELECT SUM(Subtotal) FROM #CONSOLIDADO2
----where CodFamilia = '1003012081'

IF OBJECT_ID(N'tempdb..#CONSOLIDADO2_M1') IS NOT NULL  DROP TABLE #CONSOLIDADO2_M1;

SELECT A.DIA, A.CodFamilia, A.Familia, A.real_Dolares Subtotal, A.real_ton Subtotal_Ton
INTO #CONSOLIDADO2_M1 
--SELECT DISTINCT CODFAMILIA from #CONSOLIDADO2_M1   WHERE DIA = 30
--1003012081
--1003012099
--1003012100
--5015109571
--5016096878
--5016105811
--SELECT *
FROM #CONSOLIDADO1_M1 A

--ORDER BY 1 ASC,8 ASC
--GROUP BY A.DIA, A.CodFamilia, A.Familia

IF OBJECT_ID(N'tempdb..#CONSOLIDADO3_M1') IS NOT NULL  DROP TABLE #CONSOLIDADO3_M1;

SELECT A.DIA, A.CodFamilia, B.CodFamilia CodFamilia2, B.Familia, SUM(B.real_Dolares) Tot_Acum, SUM(B.real_ton) Tot_Acum_Ton
INTO #CONSOLIDADO3_M1 
--SELECT *
FROM #CONSOLIDADO1_M1 A
	LEFT JOIN #CONSOLIDADO1_M1 B
ON A.DIA>=B.DIA  
--ORDER BY 1 ASC,8 ASC
GROUP BY A.DIA, A.CodFamilia, B.CodFamilia, B.Familia
--SELECT * FROM #CONSOLIDADO3 WHERE CodFamilia ='5016096878' AND CodFamilia2= '5016096878' ORDER BY 1 ASC,2 ASC, 3 ASC 36.23656  249.32736
--ORDER BY 1 ASC,2 ASC
--SELECT * FROM #CONSOLIDADO2  where codfamilia = '5016105811' ORDER BY 1 ASC,2 ASC   396.26518
-- 1 Dia Rellenas  1.32778
--2 Dia Rellenas  14.12782 SELECT (1.32778 + 14.12782) 15.4556
-- 3 Dia Rellenas 30.25043 SELECT (1.32778 + 14.12782+ 30.25043) 45.70603
--SELECT 0.10289 +0.73249+0.75286 PLUSBRLLE 1
--SELECT 0.00293+0.29795+0.10317 PLUSBRLLE 1

IF OBJECT_ID(N'tempdb..#CONSOLIDADO4_M1') IS NOT NULL  DROP TABLE #CONSOLIDADO4_M1;

SELECT A.DIA, A.CodFamilia, A.Subtotal, A.Subtotal_Ton, B.Tot_Acum, B.Tot_Acum_Ton
INTO #CONSOLIDADO4_M1
FROM #CONSOLIDADO2_M1 A
	LEFT JOIN #CONSOLIDADO3_M1 B ON A.DIA= B.DIA AND  A.CodFamilia = B.CodFamilia AND A.CodFamilia = B.CodFamilia2

--SELECT * FROM #CONSOLIDADO2 WHERE CodFamilia ='1003012081'
IF OBJECT_ID(N'tempdb..#PORCIONES_M1') IS NOT NULL DROP TABLE #PORCIONES_M1; 

SELECT A.DIA, A.CodFamilia, A.Subtotal, A.Subtotal_Ton, B.Dia DIA2, B.CodFamilia CodFamilia2, B.Tot_Acum, B.Tot_Acum_Ton, A.Subtotal/B.Tot_Acum Porcion, A.Subtotal_Ton/B.Tot_Acum_Ton Porcion_Ton
INTO #PORCIONES_M1
FROM #CONSOLIDADO2_M1 A
LEFT JOIN #CONSOLIDADO4_M1 B
ON A.DIA<=B.DIA 
--ORDER BY 1 ASC
WHERE B.DIA= DAY(@dia)-- asignar el dia de corte(con esto se tendra la proy por dia)  167576.81
AND A.CodFamilia = B.CodFamilia
ORDER BY 1 ASC, 2 ASC
SELECT * FROM #PORCIONES_M1






